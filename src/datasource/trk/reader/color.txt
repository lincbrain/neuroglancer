vec3 colormapOrient(vec3 orient) {
    vec3 result;
    result.r = abs(orient[0]);
    result.g = abs(orient[1]);
    result.b = abs(orient[2]);
    return clamp(result, 0.0, 1.0); 
}

vec3 colormapHeat(float scalar, float min, float max) {
    float value = (clamp(scalar, min, max) - min) / (max - min + 1e-5);
    //float value = clamp(scalar, 0.0, 1.22) / 1.22; // Ensure scalar is between 0 and 1
    vec3 color;

    if (value < 0.33) {
        color = mix(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.5, 0.0), value / 0.33); // Red to Orange
    } else if (value < 0.66) {
        color = mix(vec3(1.0, 0.5, 0.0), vec3(1.0, 1.0, 0.0), (value - 0.33) / 0.33); // Orange to Yellow
    } else {
        color = vec3(1.0, 1.0, 0.0); // Solid Yellow
    }

    return color;
}

#uicontrol bool orient_color checkbox(default=false)
#uicontrol bool heatmap checkbox(default=true)
#uicontrol float vmin slider(min=0.0, max=1.22, default=0.0)
#uicontrol float vmax slider(min=0.0, max=1.22, default=1.22)
  
void main() {
    if (orient_color) {
        emitRGB(colormapOrient(orientation));
    } else if (heatmap) {
        emitRGB(colormapHeat(FA, vmin, vmax));
    } else {
        emitDefault(); // Default color if neither heatmap nor orientation color is enabled
    }
}

